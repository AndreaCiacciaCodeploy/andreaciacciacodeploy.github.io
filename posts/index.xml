<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Andrea Ciaccia</title>
    <link>https://andreaciaccia.it/posts/</link>
    <description>Recent content in Posts on Andrea Ciaccia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Nov 2022 23:00:00 +0000</lastBuildDate><atom:link href="https://andreaciaccia.it/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JAM stack</title>
      <link>https://andreaciaccia.it/posts/jam-stack/</link>
      <pubDate>Sat, 12 Nov 2022 23:00:00 +0000</pubDate>
      
      <guid>https://andreaciaccia.it/posts/jam-stack/</guid>
      <description>Jamstack is an architecture designed to make the web faster, more secure, and easier to scale. It builds on many of the tools and workflows which developers love, and which bring maximum productivity. – Jamstack.org
JAM stack non è una tecnologia, ma uno stack di diverse componenti per la creazione di siti web. L’acronimo JAM identifica:
● Javascript
● Api
● Markup
Jamstack rappresenta la volontà di realizzare siti web statici ottenendo vantaggi in termini di performance, velocità, sicurezza, scalabilità e flessibilità.</description>
    </item>
    
    <item>
      <title>VueのNavigation Guards</title>
      <link>https://andreaciaccia.it/posts/prova/</link>
      <pubDate>Fri, 25 Jan 2019 09:00:00 +0000</pubDate>
      
      <guid>https://andreaciaccia.it/posts/prova/</guid>
      <description>Navigation guards are provided by vue-router. Three ways to hook:
globally per-route in-component NOTE:
Params or query changes won&amp;rsquo;t trigger enter/leave navigation guards. You can either watch the $route object to react to those changes, or use the beforeRouteUpdate in-component guard. Make sure to always call the next function, otherwise the hook will never be resolved. Global const router = new VueRouter({ ... }) // Before Guards router.beforeEach((to, from, next) =&amp;gt; { // .</description>
    </item>
    
  </channel>
</rss>
