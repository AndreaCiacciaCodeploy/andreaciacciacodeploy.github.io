<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andrea Ciaccia</title>
    <link>https://andreaciaccia.it/</link>
    <description>Recent content on Andrea Ciaccia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jan 2019 09:00:00 +0000</lastBuildDate><atom:link href="https://andreaciaccia.it/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue„ÅÆNavigation Guards</title>
      <link>https://andreaciaccia.it/posts/prova/</link>
      <pubDate>Fri, 25 Jan 2019 09:00:00 +0000</pubDate>
      
      <guid>https://andreaciaccia.it/posts/prova/</guid>
      <description>Navigation guards are provided by vue-router. Three ways to hook:
globally per-route in-component NOTE:
Params or query changes won&amp;rsquo;t trigger enter/leave navigation guards. You can either watch the $route object to react to those changes, or use the beforeRouteUpdate in-component guard. Make sure to always call the next function, otherwise the hook will never be resolved. Global const router = new VueRouter({ ... }) // Before Guards router.beforeEach((to, from, next) =&amp;gt; { // .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://andreaciaccia.it/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://andreaciaccia.it/about/</guid>
      <description>üìç Founder Codeploy srl. Cloud Solution Architect. Full stack developer. In Codeploy ci occupiamo di progettare soluzioni digitali per aiutare imprese e persone a sfruttare i vantaggi che la tecnologia pu√≤ offrire. Mi piace pensare che per ogni attivit√† o processo esiste sempre uno step ulteriore che possa migliorare lo stato attuale. Per questo motivo in Codeploy crediamo che l&amp;rsquo;innovazione sia prima di tutto una ricerca di qualit√† continua volta a creare un cambiamento positivo, utile e rilevante.</description>
    </item>
    
  </channel>
</rss>
